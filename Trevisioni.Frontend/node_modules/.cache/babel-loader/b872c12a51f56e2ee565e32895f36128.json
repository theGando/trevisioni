{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miche\\\\source\\\\repos\\\\trevisioni-1\\\\src\\\\Comps\\\\adReqList.tsx\";\nimport * as React from 'react';\nimport { Button } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'artistName',\n  headerName: 'Artist Name',\n  width: 160\n}, {\n  field: 'artistType',\n  headerName: 'Artist Type',\n  width: 160\n}, {\n  field: 'activityName',\n  headerName: 'Activity Name',\n  width: 160\n}, {\n  field: 'artistPhone',\n  headerName: 'Artist Phone',\n  width: 160\n}, {\n  field: 'artistEmail',\n  headerName: 'Artist Email',\n  width: 160\n}, {\n  field: 'artistPage',\n  headerName: 'Artist Page',\n  width: 160\n}, {\n  field: 'accept',\n  headerName: 'Accept',\n  width: 120\n}, {\n  field: 'action',\n  headerName: 'Accept/Refuse',\n  width: 180,\n  renderCell: params => {\n    const onAccClick = () => {\n      const api = params.api;\n      const fields = api.getAllColumns().map(c => c.field).filter(c => c !== \"__check__\" && !!c);\n      const thisRow = {};\n      fields.forEach(f => {\n        thisRow[f] = params.getValue(f);\n      });\n      return alert(JSON.stringify(thisRow, null, 4));\n    };\n\n    const onRefClick = () => {\n      const api = params.api;\n      const fields = api.getAllColumns().map(c => c.field).filter(c => c !== \"__check__\" && !!c);\n      const thisRow = {};\n      fields.forEach(f => {\n        thisRow[f] = params.getValue(f);\n      });\n      return alert(JSON.stringify(thisRow, null, 4));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        style: {\n          marginLeft: 16,\n          backgroundColor: 'green'\n        },\n        onClick: onAccClick,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        style: {\n          marginLeft: 16,\n          backgroundColor: 'red'\n        },\n        onClick: onRefClick,\n        children: \"Refuse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}];\nconst rows = [{\n  id: 1,\n  artistName: 'Riff',\n  artistType: 'Performer',\n  activityName: 'Concert'\n}, {\n  id: 2,\n  artistName: 'Baffo',\n  artistType: 'Performer',\n  activityName: 'Poetry Reading'\n}, {\n  id: 3\n}, {\n  id: 4\n}, {\n  id: 5\n}, {\n  id: 6\n}, {\n  id: 7\n}, {\n  id: 8\n}, {\n  id: 9\n}];\nexport default function RequestList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_c = RequestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestList\");","map":{"version":3,"sources":["C:/Users/Miche/source/repos/trevisioni-1/src/Comps/adReqList.tsx"],"names":["React","Button","DataGrid","columns","field","headerName","width","renderCell","params","onAccClick","api","fields","getAllColumns","map","c","filter","thisRow","forEach","f","getValue","alert","JSON","stringify","onRefClick","marginLeft","backgroundColor","rows","id","artistName","artistType","activityName","RequestList","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { DataGrid, GridApi, GridCellParams, GridCellValue} from '@material-ui/data-grid';\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'artistName', headerName: 'Artist Name', width: 160 },\r\n    { field: 'artistType', headerName: 'Artist Type', width: 160 },\r\n    { field: 'activityName', headerName: 'Activity Name', width: 160 },\r\n    { field: 'artistPhone', headerName: 'Artist Phone', width: 160 },\r\n    { field: 'artistEmail', headerName: 'Artist Email', width: 160 },\r\n    { field: 'artistPage', headerName: 'Artist Page', width: 160 },\r\n    { field: 'accept', headerName: 'Accept', width: 120, },\r\n    {\r\n        field: 'action',\r\n        headerName: 'Accept/Refuse',\r\n        width: 180,\r\n        renderCell: (params:GridCellParams) => {\r\n            const onAccClick = () => {\r\n                const api: GridApi = params.api;\r\n                const fields = api\r\n                    .getAllColumns()\r\n                    .map((c) => c.field)\r\n                    .filter((c) => c !== \"__check__\" && !!c);\r\n                const thisRow: Record<string, GridCellValue> = {};\r\n\r\n                fields.forEach((f) => {\r\n                    thisRow[f] = params.getValue(f) ;\r\n                });\r\n\r\n                return alert(JSON.stringify(thisRow, null, 4));\r\n            };\r\n            const onRefClick = () => {\r\n                const api: GridApi = params.api;\r\n                const fields = api\r\n                    .getAllColumns()\r\n                    .map((c) => c.field)\r\n                    .filter((c) => c !== \"__check__\" && !!c);\r\n                const thisRow: Record<string, GridCellValue> = {};\r\n\r\n                fields.forEach((f) => {\r\n                    thisRow[f] = params.getValue(f);\r\n                });\r\n\r\n                return alert(JSON.stringify(thisRow, null, 4));\r\n            };\r\n        return(\r\n            < strong >\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ marginLeft: 16, backgroundColor: 'green' }}\r\n                    onClick={onAccClick}\r\n                >\r\n                Accept\r\n                 \r\n            </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ marginLeft: 16, backgroundColor: 'red' }}\r\n                    onClick={onRefClick}\r\n                >\r\n                Refuse\r\n            </Button>\r\n            </strong >\r\n            )\r\n        },\r\n    },\r\n];\r\n\r\nconst rows = [\r\n    { id: 1, artistName: 'Riff', artistType: 'Performer', activityName: 'Concert' },\r\n    { id: 2, artistName: 'Baffo', artistType: 'Performer', activityName: 'Poetry Reading' },\r\n    { id: 3 },\r\n    { id: 4 },\r\n    { id: 5 },\r\n    { id: 6 },\r\n    { id: 7 },\r\n    { id: 8 },\r\n    { id: 9 },\r\n];\r\n\r\nexport default function RequestList() {\r\n    return (\r\n        <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={10} />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}